# -*- coding: utf-8 -*-
"""Sparks_Internship - Task_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DepsI442oYwttCZ-JiiAdoEdi_PYI-NM

**Prediction using Unsupervised ML**

**Author** : Aman Jain
"""

import pandas as pd
data = pd.read_csv('/content/Iris.csv')

data

data.describe()

data.isnull().sum()

data.corr()

data['Species'].value_counts()

import seaborn as sns
import matplotlib.pyplot as plt

sns.pairplot(data,hue='Species');
from sklearn.cluster import KMeans
x= data.iloc[:,[0,1,2,3,4]].values
new = []   #optimum number of clusters
for i in range(1,11):
    kmeans = KMeans(n_clusters = i,init = 'k-means++',max_iter = 300, n_init = 10,random_state = 0)
    kmeans.fit(x)
    new.append(kmeans.inertia_)

plt.plot(range(1, 11), new)
plt.title('The elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS') # Within cluster sum of squares
plt.show()

# Creating the kmeans classifier
kmeans = KMeans(n_clusters = 3, init = 'k-means++',
                max_iter = 300, n_init = 10, random_state = 0)
y_kmeans = kmeans.fit_predict(x)

plt.scatter(x[y_kmeans==0,0], x[y_kmeans==0,1],s = 100,c = 'red', label = 'Iris-setosa')
plt.scatter(x[y_kmeans==1,0], x[y_kmeans==1,1],s = 100,c = 'green', label = 'Iris-versicolour')
plt.scatter(x[y_kmeans==2,0], x[y_kmeans==2,1],s = 100,c = 'blue', label = 'Iris-virginica')

plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s = 300, c = 'orange', label = 'Centroids')
plt.title("Cluster of Species")
plt.legend()
plt.show()

